//This file contains all the variables that must be set in order for the system to work
//It is evaluated within the php files, so it must remain correct PHP syntax. remember to place quatation marks ('' or "") around each setting, and end each line with a semicolon (;). Failure to do so will result in none of the pages working at all.
//It'sWorking supports up to three distinct databases with different user types. Most setting for these will most likely be identical. If you have only one database, you can set the three databases to the same value, and distinctuate between users with the condition variable.
//Annotations must be preceded with two forward slashes (//)

//address of the server that holds the first external user database
$ext1_db_server = 'localhost';

//database program used by the first external server. supports all PDO supported types of SQL server.
$ext1_server_type = 'mysql';

//port of the first external connection. Note the port will be used in a string and must therefore be in quotes.
$ext1_port = '3306';

//name of the first external password database
$ext1_db_name = '';

//name of the first external table in which the passwords are stored
$ext1_user_table = '';

//the account for the first external SQL server
$ext1_user = '';

//the name the first external table has for the column that stores the users
$ext1_id_name = '';

//the name the first external table has for the column that stores the password hashes
$ext1_password_name = '';

//the user type of the first external database. 0 = student, 1 = teacher, 2 = admin.
$ext1_user_type = 0;

//the hashing algorithm used by the first external server
$ext1_hash_method = '';

//the password for the first external SQL server
$ext1_password = '';

//the condition for the first external server. Use this if you store multiple user types in the same table, and want to differentiate between them. $ext1_user_type will determine what kind of user it is read as. Setup.php will add this condition to the selection query to select only this type. If you use seperate database for different user types, leave it as a blank string. REMEMBER: YOU MUST NOT ADD A WHERE TO THIS STATEMENT!
$ext1_condition = "";

//does it's working have writing access to user database 1?
$ext1_write = True;

//address of the server that holds the second external user database
$ext2_db_server = '';

//database program used by the second external server. supports all PDO supported types of SQL server.
$ext2_server_type = '';
//name of the second external password database
$ext2_db_name = '';

//name of the second external table in which the passwords are stored
$ext2_user_table = '';

//the account second for the external SQL server
$ext2_user = '';

//the name the second external table has for the column that stores the users
$ext2_id_name = '';

//the name the second external table has for the column that stores the password hashes
$ext2_password_name = '';

//the user type of the second external database. 0 = student, 1 = teacher, 2 = admin.
$ext2_user_type = 1;

//the hashing algorithm used by the second external server
$ext2_hash_method = '';

//the password for the second external SQL server
$ext2_password = '';

///the condition for the second external server. Use this if you store multiple user types in the same table, and want to differentiate between them. $ext1_user_type will determine what kind of user it is read as. Setup.php will add this condition to the selection query to select only this type. If you use seperate database for different user types, leave it as a blank string. REMEMBER: YOU MUST NOT ADD A WHERE TO THIS STATEMENT!
$ext2_condition = "";

//does it's working have writing access to user database 2?
$ext2_write = True;

//address of the server that holds the third external user database
$ext3_db_server = '';

//database program used by the second external server. supports all PDO supported types of SQL server.
$ext3_server_type = 'm';

//name of the third external password database
$ext3_db_name = '';

//name of the third external table in which the passwords are stored
$ext3_user_table = '';

//the account third for the external SQL server
$ext3_user = '';

//the name the third external table has for the column that stores the users
$ext3_id_name = '';

//the name the third external table has for the column that stores the password hashes
$ext3_password_name = '';

//the user type of the third external database. 0 = student, 1 = teacher, 2 = admin.
$ext3_user_type = 2;

//the hashing algorithm used by the third external server
$ext3_hash_method = '';

//the password for the third external SQL server
$ext3_password = '';

//the condition for the third external server. Use this if you store multiple user types in the same table, and want to differentiate between them. $ext1_user_type will determine what kind of user it is read as. Setup.php will add this condition to the selection query to select only this type. If you use seperate database for different user types, leave it as a blank string. REMEMBER: YOU MUST NOT ADD A WHERE TO THIS STATEMENT!
$ext3_condition = "";

//does it's working have writing access to user database 3?
$ext3_write = True;

//the address of the internal SQL server ('localhost' if this website runs on the same server)
$db_server = '';

//database program used by the internal server. supports all PDO supported types of SQL server.
$server_type = '';

//the account for the internal SQL server
$db_user = '';

//the password for the internal SQL server
$db_password = '';

//the name of the internal database
$db_name = '';

//turn debug mode on or off. Debug mode will echo everything that's happening in the script, which will cause some cosmetic features to mallfunction and poses a security risk. Do not enable unless everything's broken anyway.
$debug = 0;